{"version":3,"sources":["components/Form/Form.jsx","components/Header/Header.jsx","components/List/List_item/ListItem.jsx","components/List/List.jsx","components/NotesManager.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","onAdd","useState","content","setForm","className","htmlFor","id","name","value","onChange","e","target","type","onClick","preventDefault","Header","onUpdate","ListItem","props","onDelete","this","Component","List","notes","map","note","defaultProps","NotesManager","getData","bind","state","fetch","process","method","headers","then","body","JSON","stringify","response","json","result","setState","error","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde4c8fc.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './Form.css';\nimport PropTypes from 'prop-types';\n\nexport default function Form({ onAdd }) {\n   const [content, setForm] = useState('');\n\n   const onFieldChange = (e) => {\n      const { target } = e;\n      setForm(target.value);\n   };\n\n   const onAddNotes = (e) => {\n      e.preventDefault();\n      if (!content) return;\n      onAdd(content);\n      setForm('');\n   };\n\n   return (\n      <form className=\"Notes-form\">\n         <div className=\"Notes-Field\">\n            <label htmlFor=\"name\" className=\"label\">\n               New Note\n            </label>\n            <textarea\n               className=\"Notes-Control\"\n               id=\"name\"\n               name=\"name\"\n               value={content}\n               onChange={onFieldChange}\n            />\n         </div>\n\n         <button\n            className=\"Form-button Form-Submit\"\n            type=\"submit\"\n            onClick={onAddNotes}\n         >\n            ➤\n         </button>\n      </form>\n   );\n}\n\nForm.propTypes = {\n   onAdd: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Header.css';\nimport PropTypes from 'prop-types';\n\nexport default function Header({ onUpdate }) {\n   return (\n      <div className=\"Header\">\n         <h1>Notes </h1>\n         <button className=\"Header__update\" type=\"button\" onClick={onUpdate}>\n            ↺\n         </button>\n      </div>\n   );\n}\n\nHeader.propTypes = {\n   onUpdate: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ListItem extends Component {\n   constructor(props) {\n      super(props);\n      this.content = props.content;\n      this.id = props.id;\n   }\n\n   render() {\n      const { onDelete } = this.props;\n      return (\n         <div className=\"Notes-List__Item\">\n            <div className=\"Notes-List__Item_content\">{this.content}:</div>\n            <button\n               className=\"Notes-List__Item_remove\"\n               type=\"button\"\n               onClick={onDelete}\n            >\n               ×\n            </button>\n         </div>\n      );\n   }\n}\n\nListItem.propTypes = {\n   content: PropTypes.string.isRequired,\n   onDelete: PropTypes.func.isRequired,\n   id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './List.css';\nimport PropTypes from 'prop-types';\nimport ListItem from './List_item/ListItem';\n\nexport default function List({ notes, onDelete }) {\n   return (\n      <div className=\"Notes-List\">\n         {notes.map((note) => (\n            <ListItem\n               content={note.content}\n               onDelete={() => onDelete(note.id)}\n               id={note.id}\n               key={note.id}\n            />\n         ))}\n      </div>\n   );\n}\n\nList.defaultProps = {\n   notes: [],\n};\n\nList.propTypes = {\n   notes: PropTypes.arrayOf(PropTypes.object),\n   onDelete: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport Form from './Form/Form';\nimport Header from './Header/Header';\nimport List from './List/List';\n\nexport default class NotesManager extends Component {\n   constructor() {\n      super();\n      this.getData = this.getData.bind(this);\n      this.state = {\n         notes: [],\n      };\n      this.onDelete = this.onDelete.bind(this);\n      this.onAdd = this.onAdd.bind(this);\n   }\n\n   componentDidMount() {\n      this.getData();\n   }\n\n   onDelete(id) {\n      fetch(`${process.env.REACT_APP_NOTES_URL}/${id}`, {\n         method: 'DELETE',\n         headers: {\n            'Content-Type': 'application/json',\n         },\n      }).then(this.getData);\n   }\n\n   onAdd(content) {\n      fetch(process.env.REACT_APP_NOTES_URL, {\n         method: 'POST',\n         headers: {\n            'Content-Type': 'application/json',\n         },\n         body: JSON.stringify({\n            content,\n         }),\n      }).then(this.getData);\n   }\n\n   getData() {\n      fetch(process.env.REACT_APP_NOTES_URL)\n         .then((response) => response.json())\n         .then(\n            (result) => {\n               this.setState({\n                  notes: [...result],\n               });\n            },\n            (error) => {\n               console.log(error);\n            }\n         );\n   }\n\n   render() {\n      const { notes } = this.state;\n\n      return (\n         <div className=\"Notes\">\n            <Header onUpdate={this.getData} />\n            <List notes={notes} onDelete={this.onDelete} />\n            <Form onAdd={this.onAdd} />\n         </div>\n      );\n   }\n}\n","import './App.css';\nimport React from 'react';\nimport NotesManager from './components/NotesManager';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <NotesManager />\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}